plugins {
    id('java')
    id('application')
}

def generatedDir = layout.buildDirectory.map {
    it.dir("generated-src")
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(group: 'junit', name: 'junit', version: '4.13.1')
}

application {
    setMainClass('mscheme.Main')
}

def createInit = tasks.register("createInit") {
    def inputFiles = fileTree('src/main/scheme') {
        include('**/*.scm')
    }
    def outputFileProvider = generatedDir.map {
        it.dir("mscheme").file("IInit.java")
    }

    inputs.files(inputFiles)
    outputs.files(outputFileProvider)

    doLast {
        def outputFile = outputFileProvider.get().asFile
        def body = inputFiles.collect {
            def name = (it.name - '.scm').toUpperCase()
            def value = it.text
                    .replaceAll(/;.*/, '') // remove comments
                    .replaceAll(/(["\\])/, /\\$1/) // quote quotes and backslashes
                    .replace('\n', ' ') // convert to one line
                    .replaceAll(/\s+/, ' ') // squeeze whitespace
                    .replaceAll(/ ?([()\[\]]) ?/, /$1/) // remove whitespace around parenthesis

            '    String ' + name + ' = "' + value + '";'
        }

        def fileContent =
                [
                        'package mscheme;',
                        '',
                        'public interface IInit',
                        '{'
                ] + body + ['}']


        mkdir(outputFile.parent)

        outputFile.write(fileContent.join('\n'))
    }
}

sourceSets {
    main {
        java {
            srcDir(generatedDir)
        }
    }
}

compileJava.configure {
    dependsOn(createInit)
}
