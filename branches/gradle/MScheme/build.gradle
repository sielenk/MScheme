apply plugin: 'java'

String mainClass = 'mscheme.Main'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes 'Main-Class': mainClass
    }
}


task execute(type: JavaExec, dependsOn: jar) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClass

    enableAssertions = true
}

task createInit {
    def inputFiles = fileTree('src/main/scheme') {
        include '**/*.scm'
    }
    def outputDir = file("$buildDir/generated-src")

    inputs.files inputFiles
    outputs.dir outputDir

    doLast {
        def body =
                inputFiles.collect {
                    def name = (it.name - '.scm').toUpperCase()
                    def value = it.text
                            .replaceAll(/;.*/, '') // remove comments
                            .replaceAll(/(["\\])/, /\\$1/) // quote quotes and backslashes
                            .replace('\n', ' ') // convert to one line
                            .replaceAll(/\s+/, ' ') // squeeze whitespace
                            .replaceAll(/ ?(\(|\)|\[|\]) ?/, /$1/) // remove whitespace around parenthesis

                    "    String $name = \"$value\";"
                }

        def fileContent = [
                'package mscheme;',
                '',
                'public interface IInit',
                '{',
                body,
                '}'
        ].flatten()

        mkdir "$outputDir/mscheme"

        new File(outputDir, 'mscheme/IInit.java')
                .write(fileContent.join('\n'))
    }
}

sourceSets {
    main {
        java {
            srcDir createInit.outputs
        }
    }
}

compileJava {
    dependsOn createInit
}
